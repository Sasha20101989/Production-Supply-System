<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Production Supply System</value>
  </data>
  <data name="ArrivalLocation" xml:space="preserve">
    <value>Arrival location</value>
  </data>
  <data name="ATA" xml:space="preserve">
    <value>ATA</value>
  </data>
  <data name="ATD" xml:space="preserve">
    <value>ATD</value>
  </data>
  <data name="BllAddNewDocument" xml:space="preserve">
    <value>Saving a docmapper</value>
  </data>
  <data name="BllAddNewDocumentColumn" xml:space="preserve">
    <value>Adding a new docmapper column</value>
  </data>
  <data name="BllAddNewDocumentSuccess" xml:space="preserve">
    <value>Saving the docmapper has been completed successfully.</value>
  </data>
  <data name="BllDownloadContainers" xml:space="preserve">
    <value>Loading containers</value>
  </data>
  <data name="BllDownloadLot" xml:space="preserve">
    <value>The process of lot formation</value>
  </data>
  <data name="BllDownloadLots" xml:space="preserve">
    <value>Loading the list of lots</value>
  </data>
  <data name="BllExportAllTracing" xml:space="preserve">
    <value>Uploading a tracing file</value>
  </data>
  <data name="BllFilterDocuments" xml:space="preserve">
    <value>Document filtering</value>
  </data>
  <data name="BllGetAllDocumentColumns" xml:space="preserve">
    <value>Loading columns available for a docmapper</value>
  </data>
  <data name="BllGetDocument" xml:space="preserve">
    <value>Receiving a document</value>
  </data>
  <data name="BllGetProcessSteps" xml:space="preserve">
    <value>Loading process steps</value>
  </data>
  <data name="BllLoadPartsForContainer" xml:space="preserve">
    <value>Loading parts for the container</value>
  </data>
  <data name="BllLoadStaticData" xml:space="preserve">
    <value>Loading static data</value>
  </data>
  <data name="BllUpdateDocument" xml:space="preserve">
    <value>Updating the docmapper</value>
  </data>
  <data name="BllUpdateDocumentSuccess" xml:space="preserve">
    <value>Docmapper update completed successfully</value>
  </data>
  <data name="BllUploadLot" xml:space="preserve">
    <value>The process of loading the lot</value>
  </data>
  <data name="BllValidationFileColumns" xml:space="preserve">
    <value>Validation of document columns</value>
  </data>
  <data name="CarrierName" xml:space="preserve">
    <value>Carrier</value>
  </data>
  <data name="CaseNumber" xml:space="preserve">
    <value>Case number</value>
  </data>
  <data name="CloseDate" xml:space="preserve">
    <value>Close date</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>completed</value>
  </data>
  <data name="Container" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="ContainerType" xml:space="preserve">
    <value>Container type</value>
  </data>
  <data name="CustomsLocation" xml:space="preserve">
    <value>Customs location</value>
  </data>
  <data name="DefaultAvatar" xml:space="preserve">
    <value>DefaultIcon.png</value>
  </data>
  <data name="DefaultFolder" xml:space="preserve">
    <value>Default folder</value>
  </data>
  <data name="DeliveryPageTitle" xml:space="preserve">
    <value>Lot list</value>
  </data>
  <data name="DeliveryTerm" xml:space="preserve">
    <value>Delivery term</value>
  </data>
  <data name="DepartureLocation" xml:space="preserve">
    <value>Departure location</value>
  </data>
  <data name="DocumentColumnElementName" xml:space="preserve">
    <value>Element name</value>
  </data>
  <data name="DocumentColumnNumber" xml:space="preserve">
    <value>Column number</value>
  </data>
  <data name="DocumentColumnSystemColumnName" xml:space="preserve">
    <value>System name</value>
  </data>
  <data name="DocumentName" xml:space="preserve">
    <value>Docmapper name</value>
  </data>
  <data name="DocumentNewContent" xml:space="preserve">
    <value>New content element</value>
  </data>
  <data name="DocumentNewContentTitle" xml:space="preserve">
    <value>Here you can add a new content element.</value>
  </data>
  <data name="DocumentRowNumber" xml:space="preserve">
    <value>Row number</value>
  </data>
  <data name="DocumentTooltip" xml:space="preserve">
    <value>Add a new template</value>
  </data>
  <data name="EditDeliveryPageTitle" xml:space="preserve">
    <value>Editing a lot</value>
  </data>
  <data name="ETA" xml:space="preserve">
    <value>ETA</value>
  </data>
  <data name="ETD" xml:space="preserve">
    <value>ETD</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="FirstDataRow" xml:space="preserve">
    <value>First data row</value>
  </data>
  <data name="GrossWeight" xml:space="preserve">
    <value>Gross weight</value>
  </data>
  <data name="IMO" xml:space="preserve">
    <value>IMO</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice number</value>
  </data>
  <data name="ListOfContainers" xml:space="preserve">
    <value>Containers list</value>
  </data>
  <data name="LogAccessDenied" xml:space="preserve">
    <value>access denied</value>
  </data>
  <data name="LogAddNewDocument" xml:space="preserve">
    <value>saving a new docmapper</value>
  </data>
  <data name="LogDocmapperColumnAdd" xml:space="preserve">
    <value>adding a docmapper column '{0}'</value>
  </data>
  <data name="LogDocmapperColumnGet" xml:space="preserve">
    <value>getting columns that can be added to the document</value>
  </data>
  <data name="LogDocmapperContentAdd" xml:space="preserve">
    <value>adding a new document content</value>
  </data>
  <data name="LogDocmapperFilter" xml:space="preserve">
    <value>filtering documents by search text '{0}'</value>
  </data>
  <data name="LogDocmapperGetById" xml:space="preserve">
    <value>getting the document with id '{0}'</value>
  </data>
  <data name="LogDocumentSwitchIsActive" xml:space="preserve">
    <value>activity status of the document has been switched to '{0}'</value>
  </data>
  <data name="LogDownloadLots" xml:space="preserve">
    <value>receiving lots</value>
  </data>
  <data name="LogExportFile" xml:space="preserve">
    <value>starting export a file {0}</value>
  </data>
  <data name="LogFilterTransport" xml:space="preserve">
    <value>filtering the list with transport with transport name '{0}'</value>
  </data>
  <data name="LogFormationNgFolder" xml:space="preserve">
    <value>beginning of the formation of the path to the file with errors based on the path: '{0}'</value>
  </data>
  <data name="LogGetContainersByLotId" xml:space="preserve">
    <value>loading containers for the lot with uniq id '{0}'</value>
  </data>
  <data name="LogGetPartsForContainer" xml:space="preserve">
    <value>loading parts for the container with uniq id '{0}'</value>
  </data>
  <data name="LogInButton" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogInPageTitle" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="LogLoadStaticData" xml:space="preserve">
    <value>loading static data</value>
  </data>
  <data name="LogLotGetById" xml:space="preserve">
    <value>loading lot with uniq id '{0}'</value>
  </data>
  <data name="LogOrdersGetForShipper" xml:space="preserve">
    <value>getting orders for the shipper with uniq id '{0}'</value>
  </data>
  <data name="LogProcessStepsGet" xml:space="preserve">
    <value>receiving the steps of operations '{0}' for the current user by his section</value>
  </data>
  <data name="LogRedirectToEditingLot" xml:space="preserve">
    <value>redirecting to the lot editing page</value>
  </data>
  <data name="LogTransportAdd" xml:space="preserve">
    <value>adding the new transport '{0}'</value>
  </data>
  <data name="LogUpdateDocument" xml:space="preserve">
    <value>updating a docmapper with id '{0}'</value>
  </data>
  <data name="LogUpdatingFiltersForContainers" xml:space="preserve">
    <value>updating filters to represent containers</value>
  </data>
  <data name="LogUpdatingFiltersForDetails" xml:space="preserve">
    <value>updating filters to represent details</value>
  </data>
  <data name="LogUploadLot" xml:space="preserve">
    <value>lot formation</value>
  </data>
  <data name="LogUploadLotCompleted" xml:space="preserve">
    <value>lot with a unique id '{0}' has been formed</value>
  </data>
  <data name="LogUpplyFiltersForContainers" xml:space="preserve">
    <value>apply filters to represent containers</value>
  </data>
  <data name="LogUpplyFiltersForDetails" xml:space="preserve">
    <value>apply filters to represent details</value>
  </data>
  <data name="LogUserGet" xml:space="preserve">
    <value>getting user</value>
  </data>
  <data name="LogUserUpdated" xml:space="preserve">
    <value>nformation for user updated: '{0}'</value>
  </data>
  <data name="LogValidatingHeaders" xml:space="preserve">
    <value>validating a file headers {0}</value>
  </data>
  <data name="LogValueValidation" xml:space="preserve">
    <value>value validation: '{0}' in column '{1}'</value>
  </data>
  <data name="LogValueValidationWarning" xml:space="preserve">
    <value>validation in column '{0}' completed with warning: '{1}'</value>
  </data>
  <data name="LogWithResult" xml:space="preserve">
    <value>with result '{0}'</value>
  </data>
  <data name="LotNumber" xml:space="preserve">
    <value>Lot number</value>
  </data>
  <data name="LotOrder" xml:space="preserve">
    <value>Lot order</value>
  </data>
  <data name="LotOrderToolTip" xml:space="preserve">
    <value>If there are no orders in the list, try to select the shipper first.</value>
  </data>
  <data name="MainPageTitle" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="MasterExportFile" xml:space="preserve">
    <value>File Upload Wizard</value>
  </data>
  <data name="MasterUploadFile" xml:space="preserve">
    <value>File Upload Wizard</value>
  </data>
  <data name="NetWeight" xml:space="preserve">
    <value>Net weight</value>
  </data>
  <data name="NewDeliveryPageTitle" xml:space="preserve">
    <value>Adding a lot</value>
  </data>
  <data name="NgFileName" xml:space="preserve">
    <value>NG-{0}-{1}{2}</value>
  </data>
  <data name="PackingType" xml:space="preserve">
    <value>Packing type</value>
  </data>
  <data name="PartNameEng" xml:space="preserve">
    <value>Part name eng</value>
  </data>
  <data name="PartNumber" xml:space="preserve">
    <value>Part number</value>
  </data>
  <data name="PleasePress" xml:space="preserve">
    <value>Please press '{0}' to complete</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantityContainers" xml:space="preserve">
    <value>Quantity containers</value>
  </data>
  <data name="SealNumber" xml:space="preserve">
    <value>Seal number</value>
  </data>
  <data name="SettingsLanguageTitle" xml:space="preserve">
    <value>Language settings</value>
  </data>
  <data name="SettingsPageAboutText" xml:space="preserve">
    <value>Production Supply System - this is app...</value>
  </data>
  <data name="SettingsPageAboutTitle" xml:space="preserve">
    <value>About the app</value>
  </data>
  <data name="SettingsPageChooseThemeText" xml:space="preserve">
    <value>The color of the design</value>
  </data>
  <data name="SettingsPageLogOutButtonText" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="SettingsPagePersonalizationTitle" xml:space="preserve">
    <value>Design settings</value>
  </data>
  <data name="SettingsPageRadioButtonDarkTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="SettingsPageRadioButtonLightTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="SettingsPageRadioButtonWindowsDefaultTheme" xml:space="preserve">
    <value>Standard from Windows</value>
  </data>
  <data name="SettingsPageRadioEnLanguage" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="SettingsPageRadioRuLanguage" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="SettingsPageThemeColor" xml:space="preserve">
    <value>Theme color</value>
  </data>
  <data name="SettingsPageTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsPageUserTitle" xml:space="preserve">
    <value>About user</value>
  </data>
  <data name="SheetName" xml:space="preserve">
    <value>Sheet name</value>
  </data>
  <data name="ShellActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ShellAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ShellCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ShellChangeLanguage" xml:space="preserve">
    <value>Switching the language</value>
  </data>
  <data name="ShellClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ShellDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ShellDeliveryPage" xml:space="preserve">
    <value>Lot list</value>
  </data>
  <data name="ShellDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="ShellDocumentMapperEditPage" xml:space="preserve">
    <value>Changing the docmapper</value>
  </data>
  <data name="ShellDocumentMapperNewPage" xml:space="preserve">
    <value>Adding a new docmapper</value>
  </data>
  <data name="ShellDocumentMapperPage" xml:space="preserve">
    <value>Managing docmappers</value>
  </data>
  <data name="ShellEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ShellEditDeliveryPage" xml:space="preserve">
    <value>Editing a lot</value>
  </data>
  <data name="ShellEmptyLotList" xml:space="preserve">
    <value>The list of lots is empty. Click on the 'Upload Lot List' button to update the list.</value>
  </data>
  <data name="ShellError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ShellExportFileCompleted" xml:space="preserve">
    <value>Files export complete</value>
  </data>
  <data name="ShellExportFiles" xml:space="preserve">
    <value>Exporting files</value>
  </data>
  <data name="ShellFileName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="ShellGoBackButton" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="ShellHamburgerButtonName" xml:space="preserve">
    <value>Open or close navigation</value>
  </data>
  <data name="ShellMainPage" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="ShellMessageChangeLanguage" xml:space="preserve">
    <value>To display the selected language correctly, you need to restart the application</value>
  </data>
  <data name="ShellNewDeliveryPage" xml:space="preserve">
    <value>Adding a lot</value>
  </data>
  <data name="ShellNoActive" xml:space="preserve">
    <value>Not active</value>
  </data>
  <data name="ShellProcessForbidden" xml:space="preserve">
    <value>You do not have the necessary rights to perform this process</value>
  </data>
  <data name="ShellSaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ShellSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="ShellSelectDate" xml:space="preserve">
    <value>Select a date</value>
  </data>
  <data name="ShellTotalQuantity" xml:space="preserve">
    <value>Total quantity</value>
  </data>
  <data name="ShellUploadButton" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="ShellUploadSuccess" xml:space="preserve">
    <value>The download has been completed successfully.</value>
  </data>
  <data name="ShellUse" xml:space="preserve">
    <value>Use</value>
  </data>
  <data name="ShellWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="ShellXLSX" xml:space="preserve">
    <value>.xlsx</value>
  </data>
  <data name="ShipperName" xml:space="preserve">
    <value>Shipper</value>
  </data>
  <data name="StatusLoginFails" xml:space="preserve">
    <value>Authorization error</value>
  </data>
  <data name="StatusNotConnectionToDb" xml:space="preserve">
    <value>There is no connection to the database</value>
  </data>
  <data name="StatusUnauthorized" xml:space="preserve">
    <value>Not authorized</value>
  </data>
  <data name="StatusUnknownError" xml:space="preserve">
    <value>An unexpected mistake</value>
  </data>
  <data name="TitlePartsForContainer" xml:space="preserve">
    <value>List of parts for container </value>
  </data>
  <data name="TransportDocument" xml:space="preserve">
    <value>Transport document</value>
  </data>
  <data name="TransportName" xml:space="preserve">
    <value>Transport name</value>
  </data>
  <data name="TransportType" xml:space="preserve">
    <value>Transport type</value>
  </data>
  <data name="ValidationPageTitle" xml:space="preserve">
    <value>Document validation</value>
  </data>
</root>